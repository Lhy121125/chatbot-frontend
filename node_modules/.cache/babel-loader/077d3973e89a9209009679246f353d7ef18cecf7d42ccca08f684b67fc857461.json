{"ast":null,"code":"var _jsxFileName = \"/Users/haiyiluo/Desktop/rag-chatbot/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [messages, setMessages] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!query) return;\n    try {\n      const response = await axios.post('http://localhost:8000/chat', {\n        query\n      });\n      setMessages([...messages, {\n        text: query,\n        sender: 'user'\n      }, {\n        text: response.data.response,\n        sender: 'bot'\n      }]);\n      setQuery('');\n    } catch (error) {\n      alert('Failed to send message');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Type your message\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"Pel0RRXMhzQy9o1UyYxlf5WaJXA=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","query","setQuery","messages","setMessages","handleSubmit","e","preventDefault","response","post","text","sender","data","error","alert","children","className","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/haiyiluo/Desktop/rag-chatbot/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction Chatbot() {\n  const [query, setQuery] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!query) return;\n    try {\n      const response = await axios.post('http://localhost:8000/chat', { query });\n      setMessages([...messages, { text: query, sender: 'user' }, { text: response.data.response, sender: 'bot' }]);\n      setQuery('');\n    } catch (error) {\n      alert('Failed to send message');\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"messages\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`message ${msg.sender}`}>\n            {msg.text}\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          placeholder=\"Type your message\"\n          required\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Chatbot;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,KAAK,EAAE;IACZ,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,4BAA4B,EAAE;QAAER;MAAM,CAAC,CAAC;MAC1EG,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEO,IAAI,EAAET,KAAK;QAAEU,MAAM,EAAE;MAAO,CAAC,EAAE;QAAED,IAAI,EAAEF,QAAQ,CAACI,IAAI,CAACJ,QAAQ;QAAEG,MAAM,EAAE;MAAM,CAAC,CAAC,CAAC;MAC5GT,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,KAAK,CAAC,wBAAwB,CAAC;IACjC;EACF,CAAC;EAED,oBACEhB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAKkB,SAAS,EAAC,UAAU;MAAAD,QAAA,EACtBZ,QAAQ,CAACc,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBrB,OAAA;QAAiBkB,SAAS,EAAG,WAAUE,GAAG,CAACP,MAAO,EAAE;QAAAI,QAAA,EACjDG,GAAG,CAACR;MAAI,GADDS,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNzB,OAAA;MAAM0B,QAAQ,EAAEnB,YAAa;MAAAU,QAAA,gBAC3BjB,OAAA;QACE2B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEzB,KAAM;QACb0B,QAAQ,EAAGrB,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACsB,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC,mBAAmB;QAC/BC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFzB,OAAA;QAAQ2B,IAAI,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACvB,EAAA,CArCQD,OAAO;AAAAgC,EAAA,GAAPhC,OAAO;AAuChB,eAAeA,OAAO;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}